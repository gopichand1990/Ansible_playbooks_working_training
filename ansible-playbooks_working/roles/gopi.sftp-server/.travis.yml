---
sudo: required

env:
  - ansible: 2.0.2.0
    distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""
  - ansible: 2.2.2.0
    distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""
  - ansible: 2.2.2.0
    distribution: ubuntu
    version: 16.04
    init: /sbin/init
    run_opts: ""
  - ansible: 2.3.0.0
    distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""
  - ansible: 2.3.0.0
    distribution: ubuntu
    version: 16.04
    init: /sbin/init
    run_opts: ""
  - ansible: 2.2.2.0
    distribution: centos
    version: 6
    init: /sbin/init
    run_opts: ""
  - ansible: 2.3.0.0
    distribution: centos
    version: 6
    init: /sbin/init
    run_opts: ""
  - ansible: 2.2.2.0
    distribution: centos
    version: 7
    init: /sbin/init
    run_opts: ""
  - ansible: 2.3.0.0
    distribution: centos
    version: 7
    init: /sbin/init
    run_opts: ""

services:
  - docker

before_install:
  # Pull container
  - 'sudo docker pull ${distribution}:${version}'
  # Customize container
  - 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version}.ansible-${ansible} --tag=${distribution}-${version}:ansible-${ansible} tests'

script:
  - container_id=$(mktemp)
  # Run container in detached state
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}-${version}:ansible-${ansible} "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

  # Small tests for workings of role.
  - >
    sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm grep "user1" /etc/shadow
    && (echo 'User created' && exit 0)
    || (echo 'User not created' && exit 1)
  - >
    sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm test -d /home/user1/test1
    && (echo 'Directory created' && exit 0)
    || (echo 'Directory not created' && exit 1)

  # Test user-specific directory creation
  - >
    sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm test -d /home/user1/test3
    && (echo 'User Directory created' && exit 0)
    || (echo 'User Directory not created' && exit 1)

  # Test role idempotence.
  - >
    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  # Clean up
  - 'sudo docker stop "$(cat ${container_id})"'

# notifications:
  # webhooks: https://galaxy.ansible.com/api/v1/notifications/
